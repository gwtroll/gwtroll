"""empty message

Revision ID: 3be3d7842f6e
Revises: 
Create Date: 2025-07-25 12:33:26.314630

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3be3d7842f6e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('eventvariables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('event_title', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('preregistration_open_date', sa.Date(), nullable=True),
    sa.Column('preregistration_close_date', sa.Date(), nullable=False),
    sa.Column('autocrat1', sa.String(), nullable=True),
    sa.Column('autocrat2', sa.String(), nullable=True),
    sa.Column('autocrat3', sa.String(), nullable=True),
    sa.Column('reservationist', sa.String(), nullable=True),
    sa.Column('merchant_application_deadline', sa.Date(), nullable=False),
    sa.Column('merchantcrat_email', sa.String(), nullable=False),
    sa.Column('marchantcrat_phone', sa.String(), nullable=False),
    sa.Column('merchant_preregistration_open_date', sa.Date(), nullable=False),
    sa.Column('merchant_preregistration_close_date', sa.Date(), nullable=False),
    sa.Column('merchant_processing_fee', sa.Integer(), nullable=False),
    sa.Column('merchant_late_processing_fee', sa.Integer(), nullable=False),
    sa.Column('merchant_squarefoot_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('merchant_bounced_check_fee', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice',
    sa.Column('invoice_number', sa.Integer(), nullable=False),
    sa.Column('invoice_type', sa.String(), nullable=False),
    sa.Column('invoice_email', sa.String(), nullable=False),
    sa.Column('invoice_date', sa.DateTime(), nullable=False),
    sa.Column('invoice_status', sa.String(), nullable=False),
    sa.Column('registration_total', sa.Integer(), nullable=True),
    sa.Column('nmr_total', sa.Integer(), nullable=True),
    sa.Column('donation_total', sa.Integer(), nullable=True),
    sa.Column('space_fee', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('processing_fee', sa.Integer(), nullable=True),
    sa.Column('rider_fee', sa.Integer(), nullable=True),
    sa.Column('invoice_total', sa.Numeric(precision=10, scale=2), sa.Computed('registration_total + nmr_total + donation_total + space_fee + processing_fee + rider_fee', ), nullable=True),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('invoice_number')
    )
    op.create_table('kingdom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lodging',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('pricesheet',
    sa.Column('arrival_date', sa.Date(), nullable=False),
    sa.Column('prereg_price', sa.Integer(), nullable=True),
    sa.Column('atd_price', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('arrival_date')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('merchant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('business_name', sa.String(), nullable=False),
    sa.Column('sca_name', sa.String(), nullable=False),
    sa.Column('fname', sa.String(), nullable=False),
    sa.Column('lname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('text_permission', sa.Boolean(), nullable=True),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state_province', sa.String(), nullable=True),
    sa.Column('zip', sa.Integer(), nullable=True),
    sa.Column('frontage_width', sa.Integer(), nullable=False),
    sa.Column('frontage_depth', sa.Integer(), nullable=False),
    sa.Column('ropes_front', sa.Integer(), nullable=False),
    sa.Column('ropes_back', sa.Integer(), nullable=False),
    sa.Column('ropes_left', sa.Integer(), nullable=False),
    sa.Column('ropes_right', sa.Integer(), nullable=False),
    sa.Column('space_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('space_fee_balance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('additional_space_information', sa.Text(), nullable=True),
    sa.Column('processing_fee', sa.Integer(), nullable=False),
    sa.Column('processing_fee_balance', sa.Integer(), nullable=False),
    sa.Column('merchant_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('electricity_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('electricity_balance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('electricity_request', sa.Text(), nullable=True),
    sa.Column('food_merchant_agreement', sa.Boolean(), nullable=True),
    sa.Column('estimated_date_of_arrival', sa.Date(), nullable=False),
    sa.Column('service_animal', sa.Boolean(), nullable=True),
    sa.Column('last_3_years', sa.Boolean(), nullable=True),
    sa.Column('vehicle_length', sa.Integer(), nullable=True),
    sa.Column('vehicle_license_plate', sa.String(), nullable=True),
    sa.Column('vehicle_state', sa.String(), nullable=True),
    sa.Column('trailer_length', sa.Integer(), nullable=True),
    sa.Column('trailer_license_plate', sa.String(), nullable=True),
    sa.Column('trailer_state', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('application_date', sa.DateTime(), nullable=True),
    sa.Column('checkin_date', sa.DateTime(), nullable=True),
    sa.Column('signature', sa.String(), nullable=True),
    sa.Column('invoice_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_number'], ['invoice.invoice_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('registrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fname', sa.String(), nullable=True),
    sa.Column('lname', sa.String(), nullable=True),
    sa.Column('scaname', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state_province', sa.String(), nullable=True),
    sa.Column('zip', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('invoice_email', sa.String(), nullable=True),
    sa.Column('age', sa.String(), nullable=True),
    sa.Column('emergency_contact_name', sa.String(), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(), nullable=True),
    sa.Column('royal_departure_date', sa.Date(), nullable=True),
    sa.Column('royal_title', sa.String(), nullable=True),
    sa.Column('mbr', sa.Boolean(), nullable=True),
    sa.Column('mbr_num_exp', sa.Date(), nullable=True),
    sa.Column('mbr_num', sa.Integer(), nullable=True),
    sa.Column('reg_date_time', sa.DateTime(), nullable=True),
    sa.Column('prereg', sa.Boolean(), nullable=True),
    sa.Column('prereg_date_time', sa.DateTime(), nullable=True),
    sa.Column('expected_arrival_date', sa.Date(), nullable=True),
    sa.Column('early_on_approved', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('duplicate', sa.Boolean(), nullable=True),
    sa.Column('registration_price', sa.Integer(), nullable=True),
    sa.Column('registration_balance', sa.Integer(), nullable=True),
    sa.Column('nmr_price', sa.Integer(), nullable=True),
    sa.Column('nmr_balance', sa.Integer(), nullable=True),
    sa.Column('paypal_donation', sa.Integer(), nullable=True),
    sa.Column('paypal_donation_balance', sa.Integer(), nullable=True),
    sa.Column('nmr_donation', sa.Integer(), nullable=True),
    sa.Column('total_due', sa.Integer(), sa.Computed('registration_price + nmr_price + paypal_donation', ), nullable=True),
    sa.Column('balance', sa.Integer(), nullable=True),
    sa.Column('minor_waiver', sa.String(), nullable=True),
    sa.Column('checkin', sa.DateTime(), nullable=True),
    sa.Column('medallion', sa.Integer(), nullable=True),
    sa.Column('signature', sa.String(), nullable=True),
    sa.Column('actual_arrival_date', sa.Date(), nullable=True),
    sa.Column('invoice_number', sa.Integer(), nullable=True),
    sa.Column('kingdom_id', sa.Integer(), nullable=True),
    sa.Column('lodging_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_number'], ['invoice.invoice_number'], ),
    sa.ForeignKeyConstraint(['kingdom_id'], ['kingdom.id'], ),
    sa.ForeignKeyConstraint(['lodging_id'], ['lodging.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('fname', sa.String(length=64), nullable=False),
    sa.Column('lname', sa.String(length=64), nullable=False),
    sa.Column('medallion', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fs_uniquifier')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('bows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('poundage', sa.Double(), nullable=True),
    sa.Column('bow_inspection_marshal_id', sa.Integer(), nullable=True),
    sa.Column('bow_inspection_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bow_inspection_marshal_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crossbows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inchpounds', sa.Double(), nullable=True),
    sa.Column('crossbow_inspection_marshal_id', sa.Integer(), nullable=True),
    sa.Column('crossbow_inspection_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['crossbow_inspection_marshal_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('earlyonrequest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('arrival_date', sa.Date(), nullable=False),
    sa.Column('reg_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('request_date', sa.DateTime(), nullable=True),
    sa.Column('dept_approval_status', sa.String(), nullable=True),
    sa.Column('autocrat_approval_status', sa.String(), nullable=True),
    sa.Column('rider_cost', sa.Integer(), nullable=True),
    sa.Column('rider_balance', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['invoice_number'], ['invoice.invoice_number'], ),
    sa.ForeignKeyConstraint(['reg_id'], ['registrations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('earlyonrider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fname', sa.String(), nullable=False),
    sa.Column('lname', sa.String(), nullable=False),
    sa.Column('scaname', sa.String(), nullable=False),
    sa.Column('minor', sa.Boolean(), nullable=True),
    sa.Column('regid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['regid'], ['registrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incidentreport',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regid', sa.Integer(), nullable=True),
    sa.Column('report_date', sa.DateTime(), nullable=True),
    sa.Column('incident_date', sa.DateTime(), nullable=True),
    sa.Column('reporting_user_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['regid'], ['registrations.id'], ),
    sa.ForeignKeyConstraint(['reporting_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marshal_inspection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regid', sa.Integer(), nullable=True),
    sa.Column('inspection_type', sa.String(), nullable=True),
    sa.Column('inspection_date', sa.DateTime(), nullable=True),
    sa.Column('inspecting_marshal_id', sa.Integer(), nullable=True),
    sa.Column('inspected', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['inspecting_marshal_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['regid'], ['registrations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reglogs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regid', sa.Integer(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['regid'], ['registrations.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('earlyonrequest_riders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('earlyonrequest_id', sa.Integer(), nullable=True),
    sa.Column('earlyonrider_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['earlyonrequest_id'], ['earlyonrequest.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['earlyonrider_id'], ['earlyonrider.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('check_num', sa.Integer(), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('registration_amount', sa.Integer(), nullable=True),
    sa.Column('nmr_amount', sa.Integer(), nullable=True),
    sa.Column('paypal_donation_amount', sa.Integer(), nullable=True),
    sa.Column('space_fee_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('processing_fee_amount', sa.Integer(), nullable=True),
    sa.Column('rider_fee_amount', sa.Integer(), nullable=True),
    sa.Column('electricity_fee_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('invoice_number', sa.Integer(), nullable=True),
    sa.Column('reg_id', sa.Integer(), nullable=True),
    sa.Column('merchant_id', sa.Integer(), nullable=True),
    sa.Column('earlyonrequest_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['earlyonrequest_id'], ['earlyonrequest.id'], ),
    sa.ForeignKeyConstraint(['invoice_number'], ['invoice.invoice_number'], ),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchant.id'], ),
    sa.ForeignKeyConstraint(['reg_id'], ['registrations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reg_bows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regid', sa.Integer(), nullable=True),
    sa.Column('bowid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bowid'], ['bows.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['regid'], ['registrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reg_crossbows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regid', sa.Integer(), nullable=True),
    sa.Column('crossbowid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['crossbowid'], ['crossbows.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['regid'], ['registrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reg_crossbows')
    op.drop_table('reg_bows')
    op.drop_table('payment')
    op.drop_table('earlyonrequest_riders')
    op.drop_table('user_roles')
    op.drop_table('reglogs')
    op.drop_table('marshal_inspection')
    op.drop_table('incidentreport')
    op.drop_table('earlyonrider')
    op.drop_table('earlyonrequest')
    op.drop_table('crossbows')
    op.drop_table('bows')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    op.drop_table('role_permissions')
    op.drop_table('registrations')
    op.drop_table('merchant')
    op.drop_table('roles')
    op.drop_table('pricesheet')
    op.drop_table('permissions')
    op.drop_table('lodging')
    op.drop_table('kingdom')
    op.drop_table('invoice')
    op.drop_table('eventvariables')
    op.drop_table('departments')
    # ### end Alembic commands ###
