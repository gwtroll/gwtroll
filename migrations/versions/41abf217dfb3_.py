"""empty message

Revision ID: 41abf217dfb3
Revises: 429e863b2a2c
Create Date: 2025-03-19 14:51:40.700289

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '41abf217dfb3'
down_revision = '429e863b2a2c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('marshal_inspection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regid', sa.Integer(), nullable=True),
    sa.Column('inspection_type', sa.String(), nullable=True),
    sa.Column('inspection_date', sa.DateTime(), nullable=True),
    sa.Column('inspecting_marshal_id', sa.Integer(), nullable=True),
    sa.Column('inspected', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['inspecting_marshal_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['regid'], ['registrations.regid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('martial_inspection')
    with op.batch_alter_table('bows', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bow_inspection_marshal_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('bows_bow_inspection_martial_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['bow_inspection_marshal_id'], ['id'])
        batch_op.drop_column('bow_inspection_martial_id')

    with op.batch_alter_table('crossbows', schema=None) as batch_op:
        batch_op.add_column(sa.Column('crossbow_inspection_marshal_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('crossbows_crossbow_inspection_martial_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['crossbow_inspection_marshal_id'], ['id'])
        batch_op.drop_column('crossbow_inspection_martial_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('crossbows', schema=None) as batch_op:
        batch_op.add_column(sa.Column('crossbow_inspection_martial_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('crossbows_crossbow_inspection_martial_id_fkey', 'users', ['crossbow_inspection_martial_id'], ['id'])
        batch_op.drop_column('crossbow_inspection_marshal_id')

    with op.batch_alter_table('bows', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bow_inspection_martial_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('bows_bow_inspection_martial_id_fkey', 'users', ['bow_inspection_martial_id'], ['id'])
        batch_op.drop_column('bow_inspection_marshal_id')

    op.create_table('martial_inspection',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('regid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('inspection_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('inspection_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('inspecting_martial_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('inspected', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['inspecting_martial_id'], ['users.id'], name='martial_inspection_inspecting_martial_id_fkey'),
    sa.ForeignKeyConstraint(['regid'], ['registrations.regid'], name='martial_inspection_regid_fkey'),
    sa.PrimaryKeyConstraint('id', name='martial_inspection_pkey')
    )
    op.drop_table('marshal_inspection')
    # ### end Alembic commands ###
